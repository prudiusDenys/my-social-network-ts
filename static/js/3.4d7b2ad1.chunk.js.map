{"version":3,"sources":["../node_modules/redux-form/es/Form.js","components/Sidebar/Navbar/Profile/ProfileInfo/ProfileInfo.module.css","components/Sidebar/Navbar/Profile/NewPost/NewPost.module.css","common/Avatar/Avatar.module.css","components/Sidebar/Navbar/Profile/Posts/Posts.module.css","components/Sidebar/Navbar/Profile/Posts/Post/Post.module.css","common/Avatar/Avatar.tsx","components/Sidebar/Navbar/Profile/NewPost/NewPost.tsx","components/Sidebar/Navbar/Profile/NewPost/NewPostContainer.tsx","components/Sidebar/Navbar/Profile/Posts/Post/Post.tsx","components/Sidebar/Navbar/Profile/Posts/Posts.tsx","components/Sidebar/Navbar/Profile/Posts/PostsContainer.tsx","components/Sidebar/Navbar/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.tsx","components/Sidebar/Navbar/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","components/Sidebar/Navbar/Profile/ProfileInfo/ProfileInfo.tsx","components/Sidebar/Navbar/Profile/Profile.tsx","components/Sidebar/Navbar/Profile/ProfileContainer.tsx"],"names":["Form","_Component","props","_this","call","this","_reduxForm","Error","_inheritsLoose","_proto","prototype","UNSAFE_componentWillMount","registerInnerOnSubmit","onSubmit","render","_this$props","rest","_objectWithoutPropertiesLoose","React","createElement","Component","propTypes","PropTypes","func","isRequired","object","withReduxForm","module","exports","Avatar","profile","useSelector","state","className","classes","avatar","src","photos","small","userPhoto","alt","Preloader","maxLength10","maxLengthCreator","NewPostRedux","reduxForm","form","style","display","handleSubmit","Field","component","Input","name","placeholder","validate","requiredField","NewPost","dispatch","useDispatch","newPost","input","formData","addPost","reset","NewPostContainer","connect","inputValue","addPostActionCreator","Post","post","userInfo","nameAndDate","date","time","text","Posts","memo","postElement","postData","map","p","key","id","postsWrapper","PostsContainer","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","color","fontSize","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileDataFormReduxForm","error","initialValues","styles","formSummaryError","type","Textarea","Object","keys","contacts","contact","ProfileInfo","profileInfo","profileInfoBox","flex","profileInfoItem","large","mainPhoto","isOwner","choosePhoto","target","files","savePhoto","saveProfile","then","goToEditMode","ProfileData","profileData","wrapper","profileDataItem","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","profileDataBtn","onClick","Contact","Profile","isAuth","to","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","WithUrlDataContainerComponent","withRouter","auth"],"mappings":"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","file":"static/js/3.4d7b2ad1.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withReduxForm } from './ReduxFormContext';\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    if (!props._reduxForm) {\n      throw new Error('Form must be inside a component decorated with reduxForm()');\n    }\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n    this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _reduxForm = _this$props._reduxForm,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"_reduxForm\"]);\n\n    return /*#__PURE__*/React.createElement(\"form\", rest);\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  _reduxForm: PropTypes.object\n};\nexport default withReduxForm(Form);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPhoto\":\"ProfileInfo_mainPhoto__e4Kzo\",\"contact\":\"ProfileInfo_contact__33Iux\",\"profileInfo\":\"ProfileInfo_profileInfo__1BWwm\",\"profileInfoBox\":\"ProfileInfo_profileInfoBox__T42sf\",\"profileInfoItem\":\"ProfileInfo_profileInfoItem__JKMYb\",\"choosePhoto\":\"ProfileInfo_choosePhoto__18tko\",\"profileData\":\"ProfileInfo_profileData__5_wpM\",\"wrapper\":\"ProfileInfo_wrapper__1sBvZ\",\"profileDataItem\":\"ProfileInfo_profileDataItem__EmqDj\",\"profileDataBtn\":\"ProfileInfo_profileDataBtn__6_IRq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"NewPost_newPost__1q2Co\",\"input\":\"NewPost_input__2UK05\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__1IUmW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsWrapper\":\"Posts_postsWrapper__1zSif\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__399nF\",\"userInfo\":\"Post_userInfo__3N5Bi\",\"nameAndDate\":\"Post_nameAndDate__NousX\",\"text\":\"Post_text__3a6W4\"};","import React from \"react\";\r\nimport classes from \"./Avatar.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {rootReducers} from \"../../redux/redux-store\";\r\nimport Preloader from \"../../components/common/preloader/Preloader\";\r\n\r\n\r\n\r\nconst Avatar = ()=>{\r\n\r\n\tconst profile = useSelector<rootReducers, any>(state => state.profile)\r\n\r\n\tif (!profile.profile) {\r\n\t\treturn <Preloader/>\r\n\t}\r\n\r\n\r\n\treturn(\r\n\t\t<div className={classes.avatar}>\r\n\t\t\t<img src={profile.profile.photos.small ? profile.profile.photos.small : userPhoto} alt=\"\"/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Avatar;","import React from \"react\";\r\nimport classes from \"./NewPost.module.css\";\r\nimport Avatar from \"../../../../../common/Avatar/Avatar\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../../../utils/validators/validators\";\r\nimport {Input} from \"../../../../../common/FormsControlls/FormsControlls\";\r\nimport {reset} from 'redux-form';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype PropsType = {\r\n\taddPost: (inputValue: string) => void\r\n}\r\ntype NewPostType = {\r\n\tnewPost: string\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst NewPost = (props: PropsType) => {\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst addNewPost = (formData: NewPostType) => {\r\n\t\tprops.addPost(formData.newPost)\r\n\t\tdispatch(reset('profileAddNewPostForm'));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.newPost}>\r\n\t\t\t<Avatar/>\r\n\t\t\t<div className={classes.input}>\r\n\t\t\t\t<NewPostRedux onSubmit={addNewPost}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst newPostForm: React.FC<InjectedFormProps<NewPostType>> = (props) => {\r\n\treturn (\r\n\t\t\t<form style={{display: 'flex'}} onSubmit={props.handleSubmit}>\r\n\t\t\t\t<Field component={Input} name={'newPost'} placeholder={'Say something'}\r\n\t\t\t\t\t\t\t validate={[requiredField, maxLength10]}/>\r\n\t\t\t\t<button>SHARE</button>\r\n\t\t\t</form>\r\n\t)\r\n}\r\n\r\nconst NewPostRedux = reduxForm<NewPostType>({form: 'profileAddNewPostForm'})(newPostForm)\r\n\r\nexport default NewPost;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../../../redux/profileReducer\";\r\nimport NewPost from \"./NewPost\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../../../../redux/store\";\r\n\r\n\r\n\r\n\r\nlet mapStateProps = (state: StateType) => {\r\n\treturn {\r\n\t}\r\n}\r\n\r\nlet mapDispatchProps = (dispatch: any) => {\r\n\treturn {\r\n\t\taddPost: (inputValue: string) => {\r\n\t\t\tdispatch(addPostActionCreator(inputValue))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst NewPostContainer = connect( mapStateProps,mapDispatchProps)(NewPost)\r\nexport default NewPostContainer;","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\nimport Avatar from \"../../../../../../common/Avatar/Avatar\";\r\n\r\ntype PropsType = {\r\n\tname: string\r\n\ttime: string\r\n\ttext: string\r\n}\r\n\r\nconst Post = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.post}>\r\n\t\t\t<div className={classes.userInfo}>\r\n\t\t\t\t<Avatar/>\r\n\t\t\t\t<div className={classes.nameAndDate}>\r\n\t\t\t\t\t<div className={classes.name}>\r\n\t\t\t\t\t\t{props.name}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.date}>\r\n\t\t\t\t\t\t{props.time}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.text}>\r\n\t\t\t\t{props.text}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from \"./Posts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {PostDataType} from \"../../../../../redux/store\";\r\n\r\n\r\ntype PropsType = {\r\n\tpostData: Array<PostDataType>\r\n}\r\n\r\nconst Posts = React.memo((props: PropsType) => {\r\n\r\n\tlet postElement = props.postData.map(p => <Post key={p.id} name={p.name} time={p.time} text={p.text}/>)\r\n\r\n\treturn (\r\n\t\t<div className={classes.postsWrapper}>\r\n\t\t\t{postElement}\r\n\t\t</div>)\r\n})\r\n\r\nexport default Posts;","import React from \"react\";\r\nimport {StateType} from \"../../../../../redux/store\";\r\nimport {connect} from \"react-redux\";\r\nimport Posts from \"./Posts\";\r\n\r\n\r\nlet mapStateProps = (state: StateType) => {\r\n\treturn {\r\n\t\tpostData: state.profile.postData\r\n\t}\r\n}\r\n\r\nconst PostsContainer = connect(mapStateProps)(Posts)\r\n\r\nexport default PostsContainer;","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype PropsType = {\r\n\tstatus: any\r\n\tupdateStatus: any\r\n}\r\n\r\nexport const ProfileStatusWithHooks = (props: PropsType) => {\r\n\r\n\tconst [editMode, setEditMode] = useState(false)\r\n\tconst [status, setStatus] = useState(props.status)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status)\r\n\t}, [props.status])\r\n\r\n\tconst activateMode = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false)\r\n\t\tprops.updateStatus(status)\r\n\t}\r\n\r\n\tconst onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetStatus(e.currentTarget.value)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode &&\r\n      <div>\r\n         <span style={{color: '#e04533'}}>Status:</span> <span style={{color: '#12b286', fontSize: '24px'}} onDoubleClick={activateMode}>{props.status || '----'}</span>\r\n      </div>\r\n\t\t\t}\r\n\t\t\t{editMode &&\r\n      <div>\r\n        <input autoFocus onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n      </div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from \"../ProfileInfo.module.css\";\r\nimport {Field, Form, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../../../../../common/FormsControlls/FormsControlls\";\r\nimport {DataProfileUserIdType} from \"../../ProfileContainer\";\r\nimport styles from '../../../../../../common/FormsControlls/FormsControlls.module.css';\r\n\r\nexport type ProfileFormDataType = {\r\n\tprofile: DataProfileUserIdType\r\n\tfullName: string\r\n\tlookingForAJob: boolean\r\n\tlookingForAJobDescription: string\r\n\taboutMe: string\r\n}\r\n\r\n\r\nconst ProfileDataForm: React.FC<InjectedFormProps<any>> = ({handleSubmit, error, initialValues}) => {\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Save</button>\r\n\t\t\t</div>\r\n\t\t\t{error && <div className={styles.formSummaryError}>\r\n\t\t\t\t{error}\r\n      </div>\r\n\t\t\t}\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<b>Full name</b>: <Field type=\"text\" placeholder={'Full name'} name={'fullName'} component={Input}/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<b>Looking for a job</b>: <Field type=\"checkbox\" name={'lookingForAJob'} component={Input}/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>My professional skills</b>: <Field type=\"text\" placeholder={'My professional skills'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={'lookingForAJobDescription'} component={Textarea}/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>About me</b>: <Field type=\"text\" placeholder={'About me'} name={'aboutMe'} component={Textarea}/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>Contacts</b>: {Object.keys(initialValues.contacts).map((key: string) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={key} className={classes.contact}>\r\n\t\t\t\t\t\t<b>{key}: <Field type=\"text\" placeholder={key} name={'contacts.' + key} component={Input}/></b>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</Form>\r\n\t)\r\n}\r\n\r\n\r\nconst ProfileDataFormReduxForm = reduxForm<any>({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, {useState} from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../../../common/preloader/Preloader\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../../../assets/images/user.png\";\r\nimport ProfileDataForm, {ProfileFormDataType} from \"./ProfileDataForm/ProfileDataForm\";\r\n\r\ntype PropsType = {\r\n\tprofile: any\r\n\tstatus: any\r\n\tupdateStatus: any\r\n\tisOwner: boolean\r\n\tsavePhoto: (photo: any) => void\r\n\tsaveProfile: any\r\n}\r\n\r\nexport const ProfileInfo = (props: PropsType) => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false)\r\n\r\n\tif (!props.profile) {\r\n\t\treturn <Preloader/>\r\n\t}\r\n\r\n\tconst onMainPhotoSelected = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (e.target.files) {\r\n\t\t\tprops.savePhoto(e.target.files[0]);\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmit = (formData: ProfileFormDataType) => {\r\n\t\tprops.saveProfile(formData)\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetEditMode(false)\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.profileInfo}>\r\n\t\t\t<div className={classes.profileInfoBox}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc=\"https://www.google.com/imgres?imgurl=https%3A%2F%2Fp7.hiclipart.com%2Fpreview%2F703%2F593%2F258%2Fpac-man-collection-3d-computer-graphics-clip-art-packman.jpg&imgrefurl=https%3A%2F%2Fwww.hiclipart.com%2Ffree-transparent-background-png-clipart-xdjca&tbnid=aZtdgwW0aIpYJM&vet=12ahUKEwjysqP3wrbrAhXItqQKHU70ATwQMygJegUIARCuAQ..i&docid=CpQPntaovCNugM&w=800&h=1186&q=packman&ved=2ahUKEwjysqP3wrbrAhXItqQKHU70ATwQMygJegUIARCuAQ\"\r\n\t\t\t\t\t\talt=\"\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{flex: '0 0 33%'}} className={classes.profileInfoItem}>\r\n\t\t\t\t\t<img src={props.profile.photos.large || userPhoto} className={classes.mainPhoto} alt=\"\"/>\r\n\t\t\t\t\t{props.isOwner && <input className={classes.choosePhoto} type=\"file\" onChange={onMainPhotoSelected}/>}\r\n\t\t\t\t\t<ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.profileInfoItem}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teditMode ?\r\n\t\t\t\t\t\t\t<ProfileDataForm onSubmit={onSubmit}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t initialValues={props.profile}/>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<ProfileData profile={props.profile} isOwner={props.isOwner} goToEditMode={() => setEditMode(true)}/>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\ntype ContactsValue = {\r\n\tcontactTitle: string\r\n\tcontactValue: string\r\n}\r\n\r\n\r\ntype ProfileDataType = {\r\n\tprofile: any,\r\n\tisOwner: boolean,\r\n\tgoToEditMode: () => void\r\n}\r\n\r\n\r\nconst ProfileData = (props: ProfileDataType) => {\r\n\treturn (\r\n\t\t<div className={classes.profileData}>\r\n\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t<div className={classes.profileDataItem}>\r\n\t\t\t\t\t<b>Full name</b>: {props.profile.fullName}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.profileDataItem}>\r\n\t\t\t\t\t<b>Looking for a job</b>: {props.profile.lookingForAJob ? 'Yes' : 'no'}\r\n\t\t\t\t</div>\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.profile.lookingForAJob &&\r\n          <div className={classes.profileDataItem}>\r\n            <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\r\n          </div>\r\n\t\t\t\t}\r\n\t\t\t\t<div className={classes.profileDataItem}>\r\n\t\t\t\t\t<b>About me</b>: {props.profile.aboutMe}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.profileDataItem + '' + classes.wrapper}>\r\n\t\t\t\t<b>Contacts</b>: {Object.keys(props.profile.contacts).map((key: string) => {\r\n\t\t\t\treturn <Contact key={key}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n\t\t\t})}\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.isOwner &&\r\n          <div>\r\n            <button className={classes.profileDataBtn} onClick={props.goToEditMode}>edit</button>\r\n          </div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}: ContactsValue) => {\r\n\treturn <div className={classes.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}","import React from \"react\";\r\nimport classes from \"./Profile.module.css\";\r\nimport NewPostContainer from \"./NewPost/NewPostContainer\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {DataProfileUserIdType} from \"./ProfileContainer\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n\tprofile: DataProfileUserIdType\r\n\tstatus: any\r\n\tupdateStatus: any\r\n\tisOwner: boolean\r\n\tsavePhoto: any\r\n\tsaveProfile: any\r\n\tisAuth: boolean\r\n}\r\n\r\nconst Profile = (props: PropsType) => {\r\n\r\n\tif(!props.isAuth){\r\n\t\treturn <Redirect to={'/login'}/>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.profile}>\r\n\t\t\t<NewPostContainer/>\r\n\t\t\t<ProfileInfo profile={props.profile}\r\n\t\t\t\t\t\t\t\t\t status={props.status}\r\n\t\t\t\t\t\t\t\t\t updateStatus={props.updateStatus}\r\n\t\t\t\t\t\t\t\t\t isOwner={props.isOwner}\r\n\t\t\t\t\t\t\t\t\t savePhoto={props.savePhoto}\r\n\t\t\t\t\t\t\t\t\t saveProfile={props.saveProfile}/>\r\n\t\t\t<PostsContainer/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {rootReducers} from \"../../../../redux/redux-store\";\r\n\r\n\r\nexport type DataProfileUserIdType = {\r\n\taboutMe: string\r\n\tcontacts: ContactsType\r\n\t\"lookingForAJob\": true,\r\n\t\"lookingForAJobDescription\": string\r\n\t\"fullName\": string\r\n\t\"userId\": number\r\n\tphotos: PhotosType\r\n}\r\nexport type ContactsType = {\r\n\t\"facebook\": string,\r\n\t\"website\": string,\r\n\t\"vk\": string,\r\n\t\"twitter\": string,\r\n\t\"instagram\": string,\r\n\t\"youtube\": string,\r\n\t\"github\": string,\r\n\t\"mainLink\": string\r\n}\r\ntype PhotosType = {\r\n\tsmall: string\r\n\tlarge: string\r\n}\r\n\r\ntype ReactComponentType = {\r\n\tDataProfileUserIdType: DataProfileUserIdType\r\n}\r\n\r\nclass ProfileContainer extends React.Component<any, any> {\r\n\r\n\r\n\trefreshProfile() {\r\n\t\tlet userId = this.props.match.params.userId\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push('/login')\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getUserProfile(userId);\r\n\t\tthis.props.getStatus(userId)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshProfile()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any) {\r\n\t\tif(this.props.match.params.userId !== this.props.match.params.userId){\r\n\t\t\tthis.refreshProfile()\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <Profile profile={this.props.profile}\r\n\t\t\t\t\t\t\t\t\t\tstatus={this.props.status}\r\n\t\t\t\t\t\t\t\t\t\tupdateStatus={this.props.updateStatus}\r\n\t\t\t\t\t\t\t\t\t\tisOwner={!this.props.match.params.userId}\r\n\t\t\t\t\t\t\t\t\t\tsavePhoto={this.props.savePhoto}\r\n\t\t\t\t\t\t\t\t\t\tsaveProfile={this.props.saveProfile}\r\n\t\t\t\t\t\t\t\t\t\tisAuth={this.props.isAuth}/>\r\n\t}\r\n}\r\n\r\n\r\n// compose(\r\n// \tconnect(mapStateToProps, {getUserProfile}),\r\n// \twithRouter,\r\n// \tWithAuthRedirect\r\n// )(ProfileContainer)\r\n\r\n\r\nlet mapStateToProps = (state: any) => {\r\n\treturn {\r\n\t\tprofile: state.profile.profile,\r\n\t\tstatus: state.profile.status,\r\n\t\tauthorizedUserId: state.auth.userId,\r\n\t\tisAuth: state.auth.isAuth\r\n\t}\r\n}\r\n\r\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile})(WithUrlDataContainerComponent);"],"sourceRoot":""}