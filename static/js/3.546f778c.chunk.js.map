{"version":3,"sources":["components/Sidebar/Navbar/Profile/NewPost/NewPost.module.css","common/Avatar/Avatar.module.css","components/Sidebar/Navbar/Profile/Posts/Posts.module.css","components/Sidebar/Navbar/Profile/Posts/Post/Post.module.css","common/Avatar/Avatar.tsx","components/Sidebar/Navbar/Profile/NewPost/NewPost.tsx","components/Sidebar/Navbar/Profile/NewPost/NewPostContainer.tsx","components/Sidebar/Navbar/Profile/Posts/Post/Post.tsx","components/Sidebar/Navbar/Profile/Posts/Posts.tsx","components/Sidebar/Navbar/Profile/Posts/PostsContainer.tsx","components/Sidebar/Navbar/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.tsx","components/Sidebar/Navbar/Profile/ProfileInfo/ProfileInfo.tsx","components/Sidebar/Navbar/Profile/Profile.tsx","components/Sidebar/Navbar/Profile/ProfileContainer.tsx"],"names":["module","exports","Avatar","className","classes","avatar","src","alt","maxLength10","maxLengthCreator","NewPostRedux","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Input","name","placeholder","validate","requiredField","NewPost","newPost","input","formData","addPost","NewPostContainer","connect","state","dispatch","inputValue","addPostActionCreator","Post","post","userInfo","nameAndDate","date","time","text","Posts","React","memo","postElement","postData","map","p","key","id","postsWrapper","PostsContainer","profile","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","photos","large","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","WithUrlDataContainerComponent","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/3.546f778c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"NewPost_newPost__1q2Co\",\"input\":\"NewPost_input__2UK05\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__1IUmW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsWrapper\":\"Posts_postsWrapper__1zSif\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__399nF\",\"userInfo\":\"Post_userInfo__3N5Bi\",\"nameAndDate\":\"Post_nameAndDate__NousX\",\"text\":\"Post_text__3a6W4\"};","import React from \"react\";\r\nimport classes from \"./Avatar.module.css\";\r\nimport avatar from './avatar.jpg'\r\n\r\n\r\nconst Avatar = ()=>{\r\n\treturn(\r\n\t\t<div className={classes.avatar}>\r\n\t\t\t<img src={avatar} alt=\"\"/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Avatar;","import React from \"react\";\r\nimport classes from \"./NewPost.module.css\";\r\nimport Avatar from \"../../../../../common/Avatar/Avatar\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../../../utils/validators/validators\";\r\nimport {Input} from \"../../../../../common/FormsControlls/FormsControlls\";\r\n\r\ntype PropsType = {\r\n\t// inputValue: string\r\n\taddPost: (inputValue: string) => void\r\n}\r\ntype NewPostType = {\r\n\tnewPost: string\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst NewPost = (props: PropsType) => {\r\n\r\n\tconst addNewPost = (formData: NewPostType) => {\r\n\t\tprops.addPost(formData.newPost)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.newPost}>\r\n\t\t\t<Avatar/>\r\n\t\t\t<div className={classes.input}>\r\n\t\t\t\t<NewPostRedux onSubmit={addNewPost}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst newPostForm: React.FC<InjectedFormProps<NewPostType>> = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<Field component={Input} name={'newPost'} placeholder={'Say something'}\r\n\t\t\t\t\t\t validate={[requiredField, maxLength10]}/>\r\n\t\t\t<button>SHARE</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst NewPostRedux = reduxForm<NewPostType>({form: 'profileAddNewPostForm'})(newPostForm)\r\n\r\nexport default NewPost;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../../../redux/profileReducer\";\r\nimport NewPost from \"./NewPost\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../../../../redux/store\";\r\n\r\n\r\n\r\n\r\nlet mapStateProps = (state: StateType) => {\r\n\treturn {\r\n\t\t// inputValue: state.profile.inputValue,\r\n\t}\r\n}\r\n\r\nlet mapDispatchProps = (dispatch: any) => {\r\n\treturn {\r\n\t\taddPost: (inputValue: string) => {\r\n\t\t\tdispatch(addPostActionCreator(inputValue))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst NewPostContainer = connect( mapStateProps,mapDispatchProps)(NewPost)\r\nexport default NewPostContainer;","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\nimport Avatar from \"../../../../../../common/Avatar/Avatar\";\r\n\r\ntype PropsType = {\r\n\tname: string\r\n\ttime: string\r\n\ttext: string\r\n}\r\n\r\nconst Post = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.post}>\r\n\t\t\t<div className={classes.userInfo}>\r\n\t\t\t\t<Avatar/>\r\n\t\t\t\t<div className={classes.nameAndDate}>\r\n\t\t\t\t\t<div className={classes.name}>\r\n\t\t\t\t\t\t{props.name}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.date}>\r\n\t\t\t\t\t\t{props.time}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.text}>\r\n\t\t\t\t{props.text}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from \"./Posts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {PostDataType} from \"../../../../../redux/store\";\r\n\r\n\r\ntype PropsType = {\r\n\tpostData: Array<PostDataType>\r\n}\r\n\r\nconst Posts = React.memo((props: PropsType) => {\r\n\r\n\tlet postElement = props.postData.map(p => <Post key={p.id} name={p.name} time={p.time} text={p.text}/>)\r\n\r\n\treturn (\r\n\t\t<div className={classes.postsWrapper}>\r\n\t\t\t{postElement}\r\n\t\t</div>)\r\n})\r\n\r\nexport default Posts;","import React from \"react\";\r\nimport {StateType} from \"../../../../../redux/store\";\r\nimport {connect} from \"react-redux\";\r\nimport Posts from \"./Posts\";\r\n\r\n\r\n// const PostsContainer = () => {\r\n// \treturn (\r\n// \t\t<StoreContext.Consumer>\r\n// \t\t\t{(store) => {\r\n// \t\t\t\tlet state = store.getState();\r\n// \t\t\t\tlet postElement = state.profile.postData.map(p => <Post name={p.name} time={p.time} text={p.text}/>)\r\n// \t\t\t\treturn (\r\n// \t\t\t\t\t<div className={classes.postsWrapper}>\r\n// \t\t\t\t\t\t{postElement}\r\n// \t\t\t\t\t</div>)\r\n// \t\t\t}\r\n// \t\t\t}\r\n// \t\t</StoreContext.Consumer>\r\n// \t)\r\n// }\r\n\r\nlet mapStateProps = (state: StateType) => {\r\n\treturn {\r\n\t\tpostData: state.profile.postData\r\n\t}\r\n}\r\n\r\nconst PostsContainer = connect(mapStateProps)(Posts)\r\n\r\nexport default PostsContainer;","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype PropsType = {\r\n\tstatus: any\r\n\tupdateStatus: any\r\n}\r\n\r\nexport const ProfileStatusWithHooks = (props: PropsType) => {\r\n\r\n\tconst [editMode, setEditMode] = useState(false)\r\n\tconst [status, setStatus] = useState(props.status)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status)\r\n\t}, [props.status])\r\n\r\n\tconst activateMode = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false)\r\n\t\tprops.updateStatus(status)\r\n\t}\r\n\r\n\tconst onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetStatus(e.currentTarget.value)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode &&\r\n      <div>\r\n        <span onDoubleClick={activateMode}>{props.status || '----'}</span>\r\n      </div>\r\n\t\t\t}\r\n\t\t\t{editMode &&\r\n      <div>\r\n        <input autoFocus onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n      </div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport Preloader from \"../../../../common/preloader/Preloader\";\r\nimport {DataProfileUserIdType} from \"../ProfileContainer\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\ntype PropsType = {\r\n\tprofile: DataProfileUserIdType\r\n\tstatus: any\r\n\tupdateStatus: any\r\n}\r\n\r\nexport const ProfileInfo = (props: PropsType) => {\r\n\tif(!props.profile){\r\n\t\treturn <Preloader/>\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img src=\"https://www.google.com/imgres?imgurl=https%3A%2F%2Fp7.hiclipart.com%2Fpreview%2F703%2F593%2F258%2Fpac-man-collection-3d-computer-graphics-clip-art-packman.jpg&imgrefurl=https%3A%2F%2Fwww.hiclipart.com%2Ffree-transparent-background-png-clipart-xdjca&tbnid=aZtdgwW0aIpYJM&vet=12ahUKEwjysqP3wrbrAhXItqQKHU70ATwQMygJegUIARCuAQ..i&docid=CpQPntaovCNugM&w=800&h=1186&q=packman&ved=2ahUKEwjysqP3wrbrAhXItqQKHU70ATwQMygJegUIARCuAQ\" alt=\"\"/>\r\n\t\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<img src={props.profile.photos.large} alt=\"\"/>\r\n\t\t\t\t<ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from \"./Profile.module.css\";\r\nimport NewPostContainer from \"./NewPost/NewPostContainer\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {DataProfileUserIdType} from \"./ProfileContainer\";\r\n\r\ntype PropsType = {\r\n\tprofile: DataProfileUserIdType\r\n\tstatus: any\r\n\tupdateStatus: any\r\n}\r\n\r\nconst Profile = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.profile}>\r\n\t\t\t<NewPostContainer/>\r\n\t\t\t<ProfileInfo profile={props.profile}\r\n\t\t\t\t\t\t\t\t\t status={props.status}\r\n\t\t\t\t\t\t\t\t\t updateStatus={props.updateStatus}/>\r\n\t\t\t<PostsContainer/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nexport type DataProfileUserIdType = {\r\n\taboutMe: string\r\n\tcontacts: ContactsType\r\n\t\"lookingForAJob\": true,\r\n\t\"lookingForAJobDescription\": string\r\n\t\"fullName\": string\r\n\t\"userId\": number\r\n\tphotos: PhotosType\r\n}\r\nexport type ContactsType = {\r\n\t\"facebook\": string,\r\n\t\"website\": null,\r\n\t\"vk\": string,\r\n\t\"twitter\": string,\r\n\t\"instagram\": string,\r\n\t\"youtube\": null,\r\n\t\"github\": string,\r\n\t\"mainLink\": null\r\n}\r\ntype PhotosType = {\r\n\tsmall: string\r\n\tlarge: string\r\n}\r\n\r\ntype ReactComponentType = {\r\n\tDataProfileUserIdType: DataProfileUserIdType\r\n}\r\n\r\nclass ProfileContainer extends React.Component<any, any> {\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.match.params.userId\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId\r\n\t\t\tif(!userId){\r\n\t\t\t\tthis.props.history.push('/login')\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getUserProfile(userId);\r\n\t\tthis.props.getStatus(userId)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <Profile profile={this.props.profile}\r\n\t\t\t\t\t\t\t\t\t\tstatus={this.props.status}\r\n\t\t\t\t\t\t\t\t\t\tupdateStatus={this.props.updateStatus}/>\r\n\t}\r\n}\r\n\r\n\r\n// compose(\r\n// \tconnect(mapStateToProps, {getUserProfile}),\r\n// \twithRouter,\r\n// \tWithAuthRedirect\r\n// )(ProfileContainer)\r\n\r\n\r\nlet mapStateToProps = (state: any) => {\r\n\treturn {\r\n\t\tprofile: state.profile.profile,\r\n\t\tstatus: state.profile.status,\r\n\t\tauthorizedUserId: state.auth.userId,\r\n\t\tisAuth: state.auth.isAuth\r\n\t}\r\n}\r\n\r\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps, {getUserProfile, getStatus, updateStatus})(WithUrlDataContainerComponent);"],"sourceRoot":""}