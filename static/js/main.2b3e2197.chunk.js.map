{"version":3,"sources":["redux/dialogsReducer.ts","api/api.ts","components/Sidebar/Sidebar.module.css","components/common/preloader/Preloader.module.css","components/Header/Search/HeaderSearch.module.css","components/Header/HeaderProfileLink/HeaderProfileLink.module.css","components/Sidebar/Navbar/Navbar.module.css","components/Login/Login.module.css","serviceWorker.ts","redux/userReducer.ts","redux/authReducer.ts","redux/app-Reducer.ts","redux/redux-store.ts","components/Sidebar/Navbar/Navbar.tsx","components/Sidebar/Sidebar.tsx","components/Sidebar/Navbar/News/News.tsx","components/Sidebar/Navbar/Settings/Settings.tsx","components/Sidebar/Navbar/Music/Music.tsx","common/Pagination/Pagination.tsx","components/Sidebar/Navbar/Users/User.tsx","components/Sidebar/Navbar/Users/Users.tsx","redux/users-selectors.ts","components/Sidebar/Navbar/Users/UsersContainer.tsx","components/Header/Search/HeaderSearch.tsx","components/Header/HeaderProfileLink/HeaderProfileLink.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","hoc/WithSuspense.tsx","index.tsx","components/Sidebar/Navbar/Users/Users.module.css","components/Header/Header.module.css","components/common/preloader/Preloader.tsx","common/FormsControlls/FormsControlls.tsx","common/FormsControlls/FormsControlls.module.css","common/Pagination/Pagination.module.css","assets/images/user.png","utils/validators/validators.ts","redux/profileReducer.ts"],"names":["initialState","newMessageText","contactsData","id","name","avatarUrl","sentMessages","text","gotMessages","fullName","dialogsReducer","state","action","type","stateCopy","textAreaValue","addMessageActionCreator","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unFollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","Boolean","window","location","hostname","match","users","totalUsersCount","isFetching","followingProgress","followSuccess","unFollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","isAuth","captchaUrl","setUserData","getCaptchaUrlSuccess","getAuthUserData","url","initialized","reducers","combineReducers","dialogs","profileReducer","usersPage","map","u","followed","count","filter","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","classes","navbar","navList","to","navLink","activeClassName","active","Sidebar","sidebar","News","news","Settings","settings","Music","music","Pagination","props","pagesCount","Math","ceil","totalItemsCount","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagination","btnPrev","onClick","p","key","selectedPage","e","onPageChanged","btnNext","User","user","usersContent","usersBlock","src","photos","small","userPhoto","alt","fBtn","disabled","some","Users","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingProgress","UsersContainer","pageNumber","this","Preloader","React","Component","connect","bind","items","totalCount","HeaderSearch","headerSearch","placeholder","HeaderProfileLink","useSelector","headerProfileLink","href","Header","header","homeLink","profileLink","logo","loginBlock","logOutBtn","HeaderContainer","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","Field","validate","requiredField","component","Input","styles","loginItem","field","checkboxBox","checkbox","checkboxText","formSummaryError","btn","message","messages","length","stopSubmit","_error","DialogsContainer","lazy","ProfileContainer","App","initializeApp","exact","path","render","from","fallback","withRouter","promise","Promise","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","preloader","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","restProps","value","maxLengthCreator","maxLength","postData","time","inputValue","addPostActionCreator","getUserProfile","setStatus","file","getState","reject"],"mappings":"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","file":"static/js/main.2b3e2197.chunk.js","sourcesContent":["import {ActionsTypes, AddMessageActionType, DialogsType} from \"./store\";\r\n\r\nconst ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\n\r\nconst initialState = {\r\n\tnewMessageText: '',\r\n\tcontactsData: [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tname: 'Mark Gruk',\r\n\t\t\tavatarUrl: 'https://media.gqitalia.it/photos/5ec3ca47a63ee8cb452d9ce4/16:9/w_1920,c_limit/Avatar.jpg'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\tname: 'Alina Morgunova',\r\n\t\t\tavatarUrl: 'https://media.gqitalia.it/photos/5ec3ca47a63ee8cb452d9ce4/16:9/w_1920,c_limit/Avatar.jpg'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 3,\r\n\t\t\tname: 'Rustam Gasanov',\r\n\t\t\tavatarUrl: 'https://media.gqitalia.it/photos/5ec3ca47a63ee8cb452d9ce4/16:9/w_1920,c_limit/Avatar.jpg'\r\n\t\t},\r\n\t],\r\n\tsentMessages: [\r\n\t\t{id: 1, text: 'Hello. My name is Denis'},\r\n\t\t{id: 2, text: 'What come over you ?'},\r\n\t\t{id: 3, text: 'Nice nice nice'}\r\n\t],\r\n\tgotMessages: [\r\n\t\t{id: 1, fullName: 'Mark', text: 'Hello. My name is Mark'},\r\n\t\t{id: 2, fullName: 'Mark', text: 'I live in Kiev'},\r\n\t],\r\n};\r\n\r\nexport const dialogsReducer = (state: DialogsType = initialState, action: ActionsTypes) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_MESSAGE:\r\n\t\t\tlet stateCopy = {...state}\r\n\t\t\tif (action.textAreaValue) {\r\n\t\t\t\tstateCopy.sentMessages = [...state.sentMessages, {id: 4, text: action.textAreaValue}]\r\n\t\t\t\tstateCopy.newMessageText = '';\r\n\t\t\t}\r\n\t\t\treturn stateCopy;\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const addMessageActionCreator = (textAreaValue: string | undefined): AddMessageActionType => {\r\n\treturn {\r\n\t\ttype: ADD_MESSAGE,\r\n\t\ttextAreaValue: textAreaValue\r\n\t}\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n\theaders: {\r\n\t\t\"API-KEY\": \"ceb21197-0d60-4a74-81f0-474168f197a3\"\r\n\t}\r\n});\r\n\r\nexport const usersAPI = {\r\n\tgetUsers(currentPage: number = 1, pageSize: number = 10) {\r\n\t\treturn instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\t\t\t.then(response => response.data)\r\n\t},\r\n\tfollow(userId: number) {\r\n\t\treturn instance.post(`follow/${userId}`)\r\n\t},\r\n\tunFollow(userId: number) {\r\n\t\treturn instance.delete(`follow/${userId}`)\r\n\t},\r\n\tgetProfile(userId: number) {\r\n\t\tconsole.warn('obsolete method')\r\n\t\treturn profileAPI.getProfile(userId)\r\n\t}\r\n}\r\n\r\nexport const profileAPI = {\r\n\tgetProfile(userId: number) {\r\n\t\treturn instance.get(`profile/${userId}`)\r\n\t},\r\n\tgetStatus(userId: number) {\r\n\t\treturn instance.get('profile/status/' + userId)\r\n\t},\r\n\tupdateStatus(status: string) {\r\n\t\treturn instance.put('profile/status', {status: status})\r\n\t},\r\n\tsavePhoto(photoFile: any) {\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append('image', photoFile);\r\n\t\treturn instance.put('profile/photo', formData, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'multipart/form-data'\r\n\t\t\t}\r\n\t\t})\r\n\t},\r\n\tsaveProfile(profile: any){\r\n\t\treturn instance.put('profile', profile)\r\n\t}\r\n}\r\n\r\nexport const authAPI = {\r\n\tme() {\r\n\t\treturn instance.get(`auth/me`,)\r\n\t},\r\n\tlogin(email: string, password: string, rememberMe = false, captcha: any) {\r\n\t\treturn instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete(`auth/login`)\r\n\t}\r\n}\r\n\r\nexport const securityAPI = {\r\n\tgetCaptchaUrl() {\r\n\t\treturn instance.get(`security/get-captcha-url`)\r\n\t},\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2ZSfF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3i2hB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerSearch\":\"HeaderSearch_headerSearch__1v0ug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerProfileLink\":\"HeaderProfileLink_headerProfileLink__arY8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__3UFVu\",\"navLink\":\"Navbar_navLink__3xirS\",\"active\":\"Navbar_active__UZB3a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2ofBK\",\"checkboxBox\":\"Login_checkboxBox__3s4zx\",\"checkbox\":\"Login_checkbox__oM9Gi\",\"checkboxText\":\"Login_checkboxText__9n-hM\",\"loginItem\":\"Login_loginItem__1ddXB\",\"field\":\"Login_field__3ldCf\",\"btn\":\"Login_btn__1vXqP\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Posts is cached for offline use.\" message.\n              console.log('Posts is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type FollowType = {\r\n\ttype: 'FOLLOW'\r\n\tuserId: number\r\n}\r\nexport type UnFollowType = {\r\n\ttype: 'UNFOLLOW'\r\n\tuserId: number\r\n}\r\nexport type SetUsersType = {\r\n\ttype: 'SET_USERS',\r\n\tusers: Array<UsersObjType>\r\n}\r\nexport type ActionsType =\r\n\tFollowType\r\n\t| UnFollowType\r\n\t| SetUsersType\r\n\t| SetCurrentPageType\r\n\t| SetUsersTotalCountType\r\n\t| ToggleIsFetchingType\r\n\t| ToggleFollowingProgressType;\r\nexport type UsersType = {\r\n\tusers: Array<UsersObjType>\r\n\tpageSize: number\r\n\ttotalUsersCount: number\r\n\tcurrentPage: number\r\n\tisFetching: boolean\r\n\tfollowingProgress: Array<number>\r\n}\r\nexport type UsersObjType = {\r\n\tid: number\r\n\tphotos: PhotosType\r\n\tfollowed: boolean\r\n\tname: string\r\n\tstatus: string\r\n\tlocation: LocationType\r\n}\r\nexport type PhotosType = {\r\n\tsmall: string | undefined\r\n\tlarge: string | undefined\r\n}\r\nexport type LocationType = {\r\n\tcity: string\r\n\tcountry: string\r\n}\r\nexport type SetCurrentPageType = {\r\n\ttype: 'SET_CURRENT_PAGE'\r\n\tcurrentPage: number\r\n\r\n}\r\nexport type SetUsersTotalCountType = {\r\n\ttype: 'SET_TOTAL_USERS_COUNT'\r\n\tcount: number\r\n}\r\nexport type ToggleIsFetchingType = {\r\n\ttype: 'TOGGLE_IS_FETCHING'\r\n\tisFetching: boolean\r\n}\r\nexport type ToggleFollowingProgressType = {\r\n\ttype: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n\tisFetching: boolean\r\n\tuserId: number\r\n}\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nconst initialState = {\r\n\tusers: [],\r\n\tpageSize: 5,\r\n\ttotalUsersCount: 0,\r\n\tcurrentPage: 1,\r\n\tisFetching: true,\r\n\tfollowingProgress: []\r\n};\r\n\r\nexport const userReducer = (state: UsersType = initialState, action: ActionsType) => {\r\n\tswitch (action.type) {\r\n\t\tcase FOLLOW: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map(u => {\r\n\t\t\t\t\tif (u.id === action.userId) {\r\n\t\t\t\t\t\treturn {...u, followed: true}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn u;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tcase UNFOLLOW: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map(u => {\r\n\t\t\t\t\tif (u.id === action.userId) {\r\n\t\t\t\t\t\treturn {...u, followed: false}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn u;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_USERS: {\r\n\t\t\treturn {...state, users: action.users}\r\n\t\t}\r\n\t\tcase SET_CURRENT_PAGE: {\r\n\t\t\treturn {...state, currentPage: action.currentPage}\r\n\t\t}\r\n\t\tcase SET_TOTAL_USERS_COUNT: {\r\n\t\t\treturn {...state, totalUsersCount: action.count}\r\n\t\t}\r\n\t\tcase TOGGLE_IS_FETCHING: {\r\n\t\t\treturn {...state, isFetching: action.isFetching}\r\n\t\t}\r\n\t\tcase TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfollowingProgress: action.isFetching\r\n\t\t\t\t\t? [...state.followingProgress, action.userId]\r\n\t\t\t\t\t: state.followingProgress.filter(id => id !== action.userId)\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const followSuccess = (userId: number): FollowType => {\r\n\treturn {\r\n\t\ttype: FOLLOW,\r\n\t\tuserId\r\n\t}\r\n}\r\nexport const unFollowSuccess = (userId: number): UnFollowType => {\r\n\treturn {\r\n\t\ttype: UNFOLLOW,\r\n\t\tuserId\r\n\t}\r\n}\r\nexport const setUsers = (users: Array<UsersObjType>): SetUsersType => {\r\n\treturn {\r\n\t\ttype: SET_USERS,\r\n\t\tusers\r\n\t}\r\n}\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageType => {\r\n\treturn {\r\n\t\ttype: SET_CURRENT_PAGE,\r\n\t\tcurrentPage\r\n\t}\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetUsersTotalCountType => {\r\n\treturn {\r\n\t\ttype: SET_TOTAL_USERS_COUNT,\r\n\t\tcount: totalUsersCount\r\n\t}\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingType => {\r\n\treturn {\r\n\t\ttype: TOGGLE_IS_FETCHING,\r\n\t\tisFetching\r\n\t}\r\n}\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressType => {\r\n\treturn {\r\n\t\ttype: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n\t\tisFetching,\r\n\t\tuserId\r\n\t}\r\n}\r\n\r\nexport const requestUsers = (currentPage: number, pageSize: number) => {\r\n\treturn async (dispatch: Function) => {\r\n\t\tdispatch(toggleIsFetching(true));\r\n\t\tdispatch(setCurrentPage(currentPage))\r\n\r\n\t\tlet data = await usersAPI.getUsers(currentPage, pageSize)\r\n\t\tdispatch(toggleIsFetching(false))\r\n\t\tdispatch(setUsers(data.items))\r\n\t\tdispatch(setTotalUsersCount(data.totalCount))\r\n\t}\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: Dispatch, userId: number, apiMethod: any, actionCreator: any) => {\r\n\tdispatch(toggleFollowingProgress(true, userId))\r\n\tlet response = await apiMethod(userId)\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(actionCreator(userId))\r\n\t}\r\n\tdispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\tlet apiMethod = usersAPI.follow.bind(usersAPI)\r\n\t\tfollowUnfollowFlow(dispatch, userId, apiMethod, followSuccess)\r\n\t}\r\n}\r\n\r\nexport const unFollow = (userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\tlet apiMethod = usersAPI.unFollow.bind(usersAPI)\r\n\t\tfollowUnfollowFlow(dispatch, userId, apiMethod, unFollowSuccess)\r\n\t}\r\n}","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type ActionsType = SetUserDataType | ReturnType<typeof getCaptchaUrlSuccess>;\r\nexport type InitialStateType = {\r\n\tuserId: null | number\r\n\temail: null | string\r\n\tlogin: null | string\r\n\tisAuth: boolean,\r\n\tcaptchaUrl: null | string\r\n\r\n}\r\nexport type SetUserDataType = {\r\n\ttype: typeof SET_USER_DATA\r\n\tdata: DataType\r\n}\r\ntype DataType = {\r\n\tuserId: null | number\r\n\temail: null | string\r\n\tlogin: null | string\r\n\tisAuth: boolean\r\n}\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nconst initialState: InitialStateType = {\r\n\tuserId: null,\r\n\temail: null,\r\n\tlogin: null,\r\n\tisAuth: false,\r\n\tcaptchaUrl: null\r\n};\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_DATA: {\r\n\t\t\treturn {...state, ...action.data}\r\n\t\t}\r\n\t\tcase \"auth/GET_CAPTCHA_URL_SUCCESS\": {\r\n\t\t\treturn {...state, captchaUrl: action.captchaUrl}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const setUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): SetUserDataType => {\r\n\treturn {type: SET_USER_DATA, data: {userId, email, login, isAuth}}\r\n}\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string) => {\r\n\treturn {type: GET_CAPTCHA_URL_SUCCESS, captchaUrl} as const\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch: Function) => {\r\n\tlet response = await authAPI.me()\r\n\tif (response.data.resultCode === 0) {\r\n\t\tlet {id, email, login} = response.data.data\r\n\t\tdispatch(setUserData(id, email, login, true))\r\n\t}\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: any) => async (dispatch: Function) => {\r\n\tlet response = await authAPI.login(email, password, rememberMe, captcha)\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(getAuthUserData())\r\n\t} else {\r\n\t\tif (response.data.resultCode === 10) {\r\n\t\t\tdebugger\r\n\t\t\tdispatch(getCaptchaUrl())\r\n\t\t}\r\n\t\tlet message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n\t\tdispatch(stopSubmit('login', {_error: message}))\r\n\t}\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: Dispatch) => {\r\n\tlet response = await securityAPI.getCaptchaUrl();\r\n\tconst captchaUrl = response.data.url\r\n\tdispatch(getCaptchaUrlSuccess(captchaUrl))\r\n\t// let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n\t// dispatch(stopSubmit('login', {_error: message}))\r\n}\r\n\r\nexport const logout = () => async (dispatch: Dispatch) => {\r\n\tlet response = await authAPI.logout()\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdebugger\r\n\t\tdispatch(setUserData(null, null, null, false))\r\n\t}\r\n}","import {getAuthUserData} from \"./authReducer\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nexport type InitialStateType = {\r\n\tinitialized: false,\r\n\r\n}\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nconst initialState: InitialStateType = {\r\n\tinitialized: false,\r\n};\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action:any) => {\r\n\tswitch (action.type) {\r\n\t\tcase INITIALIZED_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinitialized: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const initializedSuccess = () => {\r\n\treturn {type: INITIALIZED_SUCCESS}\r\n}\r\n\r\nexport const initializeApp = () => (dispatch: Function) => {\r\n\tlet promise = dispatch(getAuthUserData())\r\n\tPromise.all([promise])\r\n\t\t.then(()=>{\r\n\t\t\tdispatch(initializedSuccess());\r\n\t\t})\r\n}","import {dialogsReducer} from \"./dialogsReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {userReducer} from \"./userReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport {appReducer} from \"./app-Reducer\";\r\n\r\nconst reducers = combineReducers({\r\n\t\tdialogs: dialogsReducer,\r\n\t\tprofile: profileReducer,\r\n\t\tusersPage: userReducer,\r\n\t\tauth: authReducer,\r\n\t\tform: formReducer,\r\n\tapp: appReducer\r\n\t}\r\n)\r\n\r\n\t// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport type rootReducers = ReturnType<typeof reducers>\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from \"react\";\r\nimport classes from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n\treturn (\r\n\t\t<div className={classes.navbar}>\r\n\t\t\t<ul className={classes.navList}>\r\n\t\t\t\t<NavLink to=\"/profile\" className={classes.navLink}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactiveClassName={classes.active}>Profile</NavLink>\r\n\t\t\t\t<NavLink to=\"/dialogs\" className={classes.navLink}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactiveClassName={classes.active}>Messages</NavLink>\r\n\t\t\t\t<NavLink to=\"/users\" className={classes.navLink}\r\n\t\t\t\t\t\t\t\t activeClassName={classes.active}>Users</NavLink>\r\n\t\t\t\t<NavLink to=\"/news\" className={classes.navLink}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactiveClassName={classes.active}>News</NavLink>\r\n\t\t\t\t<NavLink to=\"/music\" className={classes.navLink}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactiveClassName={classes.active}>Music</NavLink>\r\n\t\t\t\t<NavLink to=\"/settings\" className={classes.navLink}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactiveClassName={classes.active}>Settings</NavLink>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport classes from \"./Sidebar.module.css\";\r\nimport Navbar from \"./Navbar/Navbar\";\r\n\r\nconst Sidebar = ()=>{\r\n\treturn(\r\n\t\t<div className={classes.sidebar}>\r\n\t\t\t<Navbar/>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Sidebar;","import React from \"react\";\r\nimport classes from \"./News.module.css\";\r\n\r\nconst News = ()=>{\r\n\treturn(\r\n\t\t<div className={classes.news}>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport classes from \"./Settings.module.css\";\r\n\r\nconst Settings = ()=>{\r\n\treturn(\r\n\t\t<div className={classes.settings}>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport classes from \"./Music.module.css\";\r\n\r\nconst Music = ()=>{\r\n\treturn(\r\n\t\t<div className={classes.music}>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Music;","import React, {useState} from \"react\";\r\nimport classes from \"./Pagination.module.css\";\r\n\r\ntype PropsType = {\r\n\ttotalItemsCount: number\r\n\tpageSize: number\r\n\tcurrentPage: number\r\n\tonPageChanged: (pageNumber: number) => void\r\n}\r\n\r\nexport const Pagination = (props: PropsType) => {\r\n\tlet pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n\tlet pages: Array<number> = []\r\n\tfor (let i = 1; i <= pagesCount; i++) {\r\n\t\tpages.push(i)\r\n\t}\r\n\r\n\tconst portionSize = 10;\r\n\r\n\t// говорим сколько страниц хотим показыват на странице\r\n\tlet portionCount = Math.ceil(pagesCount / portionSize)\r\n\tlet [portionNumber, setPortionNumber] = useState(1)\r\n\t// находим первый элемент новой порции\r\n\tlet leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n\t// находим последний элемент новой страницы\r\n\tlet rightPortionPageNumber = (portionNumber) * portionSize;\r\n\r\n\r\n\treturn (\r\n\t\t<div className={classes.pagination}>\r\n\t\t\t<div>\r\n\t\t\t\t{portionNumber > 1 && <button className={classes.btnPrev} onClick={() => {\r\n\t\t\t\t\tsetPortionNumber(portionNumber - 1)\r\n\t\t\t\t}}>Prev</button>}\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tpages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n\t\t\t\t\t.map((p,i) => {\r\n\t\t\t\t\t\treturn <span key={i} className={props.currentPage === p ? classes.selectedPage : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t props.onPageChanged(p)\r\n\t\t\t\t\t\t\t\t\t\t\t\t }}>{p}</span>\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t<div>\r\n\t\t\t\t{portionCount > portionNumber && <button className={classes.btnNext} onClick={() => {\r\n\t\t\t\t\tsetPortionNumber(portionNumber + 1)\r\n\t\t\t\t}}>Next</button>}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from \"./Users.module.css\";\r\nimport userPhoto from \"../../../../assets/images/user.png\";\r\nimport {UsersObjType} from \"../../../../redux/userReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n\tuser: UsersObjType\r\n\tfollow: (userId: number) => void\r\n\tunFollow: (userId: number) => void\r\n\tfollowingProgress: [] | Array<number>\r\n}\r\n\r\nexport const User = (props: PropsType) => {\r\n\r\n\tlet user = props.user\r\n\r\n\treturn (\r\n\t\t<div className={classes.users}>\r\n\t\t\t<div className={classes.usersContent}>\r\n\t\t\t\t<div className={classes.usersBlock}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<NavLink to={'/profile/' + user.id}>\r\n\t\t\t\t\t\t\t<img src={user.photos.small !== null ? user.photos.small : userPhoto} alt=\"\"\r\n\t\t\t\t\t\t\t\t\t className={classes.userPhoto}/>\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tuser.followed\r\n\t\t\t\t\t\t\t\t? <button className={classes.fBtn} disabled={props.followingProgress.some(id => id === user.id)} onClick={() => {\r\n\t\t\t\t\t\t\t\t\tprops.unFollow(user.id)\r\n\t\t\t\t\t\t\t\t}}>Unfollow</button>\r\n\t\t\t\t\t\t\t\t: <button className={classes.fBtn} disabled={props.followingProgress.some(id => id === user.id)} onClick={() => {\r\n\t\t\t\t\t\t\t\t\tprops.follow(user.id)\r\n\t\t\t\t\t\t\t\t}}>Follow</button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.usersBlock}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div>{user.name}</div>\r\n\t\t\t\t\t\t<div>{user.status}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<div>{'user.location.country'}</div>\r\n\t\t\t\t\t\t\t<div>{'user.location.city'}</div>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport {UsersObjType} from \"../../../../redux/userReducer\";\r\nimport {Pagination} from \"../../../../common/Pagination/Pagination\";\r\nimport {User} from \"./User\";\r\n\r\ntype PropsType = {\r\n\tusers: Array<UsersObjType>\r\n\ttotalUsersCount: number\r\n\tpageSize: number\r\n\tcurrentPage: number\r\n\tonPageChanged: (pageNumber: number) => void\r\n\tfollow: (userId: number) => void\r\n\tunFollow: (userId: number) => void\r\n\tfollowingProgress: [] | Array<number>\r\n}\r\n\r\nlet Users = (props: PropsType) => {\r\n\treturn <>\r\n\t\t\t<Pagination currentPage={props.currentPage}\r\n\t\t\t\t\t\t\t\t\tonPageChanged={props.onPageChanged}\r\n\t\t\t\t\t\t\t\t\tpageSize={props.pageSize}\r\n\t\t\t\t\t\t\t\t\ttotalItemsCount={props.totalUsersCount}/>\r\n\t\t\t{props.users.map(u => <User key={u.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t unFollow={props.unFollow}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t follow={props.follow}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t user={u}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t followingProgress={props.followingProgress}/>)}\r\n\t</>\r\n}\r\n\r\nexport default Users","import {createSelector} from \"reselect\";\r\nimport {UsersObjType} from \"./userReducer\";\r\n\r\n\r\nconst getUsersSelector = (state: any) => {\r\n\treturn state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,(users: Array<UsersObjType>) => {\r\n\treturn users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state: any) => {\r\n\treturn state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state: any) => {\r\n\treturn state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state: any) => {\r\n\treturn state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: any) => {\r\n\treturn state.usersPage.isFetching\r\n}\r\nexport const getFollowingProgress = (state: any) => {\r\n\treturn state.usersPage.followingProgress\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n\tfollow, requestUsers,\r\n\tsetCurrentPage, toggleFollowingProgress,\r\n\tunFollow,\r\n\tUsersObjType\r\n} from \"../../../../redux/userReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../../../common/preloader/Preloader\";\r\nimport {rootReducers} from \"../../../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n\tgetCurrentPage, getFollowingProgress,\r\n\tgetIsFetching,\r\n\tgetPageSize,\r\n\tgetTotalUsersCount, getUsers,\r\n} from \"../../../../redux/users-selectors\";\r\n\r\nexport type ReactComponentType = {\r\n\tusers: Array<UsersObjType>\r\n\tsetUsers: (users: Array<UsersObjType>) => void\r\n\tfollow: (userId: number) => void\r\n\tunFollow: (userId: number) => void\r\n\tsetCurrentPage: (pageNumber: number) => void\r\n\tpageSize: number\r\n\ttotalUsersCount: number\r\n\tcurrentPage: number\r\n\tsetTotalUsersCount: (totalCount: number) => void\r\n\tisFetching: boolean\r\n\ttoggleIsFetching: (isFetching: boolean) => void\r\n\ttoggleFollowingProgress: (isFetching: boolean) => void\r\n\tfollowingProgress: Array<number>\r\n\r\n}\r\n\r\nclass UsersContainer extends React.Component<any> {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n\t}\r\n\r\n\tonPageChanged = (pageNumber: number) => {\r\n\t\tthis.props.getUsers(pageNumber, this.props.pageSize);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <>\r\n\t\t\t{this.props.isFetching ? <Preloader/> : null}\r\n\t\t\t<Users totalUsersCount={this.props.totalUsersCount}\r\n\t\t\t\t\t\t pageSize={this.props.pageSize}\r\n\t\t\t\t\t\t currentPage={this.props.currentPage}\r\n\t\t\t\t\t\t onPageChanged={this.onPageChanged}\r\n\t\t\t\t\t\t users={this.props.users}\r\n\t\t\t\t\t\t follow={this.props.follow}\r\n\t\t\t\t\t\t unFollow={this.props.unFollow}\r\n\t\t\t\t\t\t followingProgress={this.props.followingProgress}/>\r\n\t\t</>\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: rootReducers) => {\r\n\treturn {\r\n\t\tusers: getUsers(state),\r\n\t\tpageSize: getPageSize(state),\r\n\t\ttotalUsersCount: getTotalUsersCount(state),\r\n\t\tcurrentPage: getCurrentPage(state),\r\n\t\tisFetching: getIsFetching(state),\r\n\t\tfollowingProgress: getFollowingProgress(state)\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, {follow, unFollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers}))\r\n(UsersContainer)","import React from \"react\";\r\nimport classes from './HeaderSearch.module.css'\r\nconst HeaderSearch = ()=>{\r\n\treturn(\r\n\t\t<div className={classes.headerSearch}>\r\n\t\t\t<input type=\"text\" placeholder={'search'}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default HeaderSearch;","import React from \"react\";\r\nimport classes from \"./HeaderProfileLink.module.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {rootReducers} from \"../../../redux/redux-store\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\nconst HeaderProfileLink = ()=>{\r\n\r\n\r\n\tconst profile = useSelector<rootReducers, any>(state => state.profile)\r\n\r\n\tif (!profile.profile) {\r\n\t\treturn <Preloader/>\r\n\t}\r\n\r\n\r\n\treturn(\r\n\t\t<div className={classes.headerProfileLink}>\r\n\t\t\t<a href=\"#\"><img src={profile.profile.photos.small ? profile.profile.photos.small : userPhoto} alt=\"\"/></a>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default HeaderProfileLink;","import React from \"react\";\r\nimport classes from './Header.module.css'\r\nimport HeaderSearch from \"./Search/HeaderSearch\";\r\nimport HeaderProfileLink from \"./HeaderProfileLink/HeaderProfileLink\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n\tisAuth: boolean\r\n\tlogin: string\r\n\tlogout: any\r\n}\r\n\r\nconst Header = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.header}>\r\n\t\t\t<div className={classes.homeLink}>\r\n\t\t\t\t<a href=\"#\">HOME</a>\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.isAuth &&\r\n          <div className={classes.profileLink}>\r\n            <HeaderProfileLink/>\r\n          </div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.logo}>\r\n\t\t\t\tDENZIMM Social Network\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.loginBlock}>\r\n\t\t\t\t{props.isAuth ?\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{props.login} - <button className={classes.logOutBtn} onClick={props.logout}> Log out </button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: <NavLink to={'/login'}>Login</NavLink>}\r\n\t\t\t</div>\r\n\t\t\t<HeaderSearch/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\nimport {rootReducers} from \"../../redux/redux-store\";\r\n\r\nclass HeaderContainer extends React.Component<any, any> {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Header isAuth={this.props.isAuth} login={this.props.login} logout={this.props.logout}/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n\tisAuth: state.auth.isAuth,\r\n\tlogin: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {InjectedFormProps} from \"redux-form\";\r\nimport styles from './Login.module.css'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Input} from \"../../common/FormsControlls/FormsControlls\";\r\nimport {requiredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from './../../common/FormsControlls/FormsControlls.module.css';\r\n\r\n\r\ntype FormDataType = {\r\n\temail: string\r\n\tpassword: string\r\n\trememberMe: boolean,\r\n\tcaptcha: any,\r\n}\r\n\r\ntype LoginFormOwnProps = {\r\n\tcaptchaUrl: string | null\r\n}\r\n\r\nconst stylesLogin = {\r\n\tfield:{\r\n\r\n\t}\r\n}\r\n\r\nconst Login = (props: any) => {\r\n\r\n\tconst onSubmit = (formData: FormDataType) => {\r\n\t\tprops.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n\t}\r\n\r\n\tif (props.isAuth) {\r\n\t\treturn <Redirect to={'/profile'}/>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.login}>\r\n\t\t\t<h1>LOGIN</h1>\r\n\t\t\t<LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType, LoginFormOwnProps> & LoginFormOwnProps> = ({handleSubmit, error, captchaUrl}) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\r\n\t\t\t{captchaUrl && <img src={captchaUrl} alt=\"\"/>}\r\n\t\t\t{captchaUrl && <Field type=\"text\" validate={[requiredField]} placeholder={'Symbols from image'} name={'captcha'}\r\n                            component={Input}/>}\r\n\t\t\t<div className={styles.loginItem}>\r\n\t\t\t\t<Field className={styles.field} type=\"text\" validate={[requiredField]} placeholder={'Email'} name={'email'} component={Input}/>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.loginItem}>\r\n\t\t\t\t<Field className={styles.field} type=\"password\" validate={[requiredField]} placeholder={'Password'} name={'password'} component={Input}/>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.checkboxBox}>\r\n\t\t\t\t<Field className={styles.checkbox} type=\"checkbox\" validate={[]} name={'rememberMe'} component={Input}/>\r\n\t\t\t\t<div className={styles.checkboxText}>remember me </div>\r\n\t\t\t</div>\r\n\t\t\t{error && <div className={classes.formSummaryError}>\r\n\t\t\t\t{error}\r\n      </div>\r\n\t\t\t}\r\n\t\t\t<div>\r\n\t\t\t\t<button className={styles.btn}>LOGIN</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType, LoginFormOwnProps>({form: 'login'})(LoginForm)\r\nconst mapStateToProps = (state: any) => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth,\r\n\t\tcaptchaUrl: state.auth.captchaUrl\r\n\t}\r\n}\r\nexport default connect(mapStateToProps, {login})(Login)","import React, {Suspense} from 'react';\nimport './App.css';\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport {Route, withRouter, Switch, Redirect} from \"react-router-dom\";\nimport News from \"./components/Sidebar/Navbar/News/News\";\nimport Settings from \"./components/Sidebar/Navbar/Settings/Settings\";\nimport Music from \"./components/Sidebar/Navbar/Music/Music\";\nimport UsersContainer from \"./components/Sidebar/Navbar/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-Reducer\";\nimport Preloader from \"./components/common/preloader/Preloader\";\nimport {WithSuspense} from \"./hoc/WithSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Sidebar/Navbar/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Sidebar/Navbar/Profile/ProfileContainer'));\n\n\nclass App extends React.Component<any, any> {\n\tcomponentDidMount() {\n\t\tthis.props.initializeApp()\n\t}\n\n\trender() {\n\t\tif (!this.props.initialized) {\n\t\t\treturn <Preloader/>\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<HeaderContainer/>\n\t\t\t\t<Sidebar/>\n\n\t\t\t\t<div className='content-wrapper'>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path={'/'} render={() => <Redirect from=\"/\" to=\"/profile\"/>}/>\n\t\t\t\t\t\t<Route path={'/profile/:userId?'} render={WithSuspense(ProfileContainer)}/>\n\t\t\t\t\t\t<Route path={'/dialogs'} render={() => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Suspense fallback={<div>Loading...</div>}>\n\t\t\t\t\t\t\t\t\t<DialogsContainer/>\n\t\t\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}}/>\n\t\t\t\t\t\t<Route path={'/users'} render={() => <UsersContainer/>}/>\n\t\t\t\t\t\t<Route path={'/music'} render={() => <Music/>}/>\n\t\t\t\t\t\t<Route path={'/news'} render={() => <News/>}/>\n\t\t\t\t\t\t<Route path={'/settings'} render={() => <Settings/>}/>\n\t\t\t\t\t\t<Route path={'/login'} render={() => <Login/>}/>\n\t\t\t\t\t\t<Route render={() => <div>404 NOT FOUND</div>}/>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: any) => ({\n\tinitialized: state.app.initialized\n})\n\nexport default compose<React.ComponentType>(withRouter, connect(mapStateToProps, {initializeApp}))(App)","import React, {Suspense} from \"react\";\r\n\r\nexport const WithSuspense = (Component: any) => {\r\n\treturn (props: any)=>{\r\n\t\treturn(\r\n\t\t\t\t<Suspense fallback={<div>Loading...</div>}>\r\n\t\t\t\t\t<Component {...props}/>\r\n\t\t\t\t</Suspense>\r\n\t\t\t)\r\n\t}\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport App from \"./App\";\nimport {HashRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<Provider store={store}>\n\t\t\t<App/>\n\t\t</Provider>\n\t</HashRouter>\n\t,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1309_\",\"users\":\"Users_users__1IXIz\",\"usersContent\":\"Users_usersContent__3_-ko\",\"fBtn\":\"Users_fBtn__HteXG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__M-TVf\",\"logo\":\"Header_logo__3wrAR\",\"homeLink\":\"Header_homeLink__1gjZU\",\"profileLink\":\"Header_profileLink__2x9v7\",\"loginBlock\":\"Header_loginBlock__1NJ1g\",\"logOutBtn\":\"Header_logOutBtn__2FZWD\"};","import React from \"react\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport classes from \"./Preloader.module.css\";\r\n\r\n\r\nconst Preloader = () => {\r\n\treturn (\r\n\t\t<div className={classes.preloader}>\r\n\t\t\t<CircularProgress />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Preloader;\r\n","import React from \"react\";\r\nimport classes from \"./FormsControlls.module.css\";\r\n\r\n\r\nexport const FormControl = ({input, meta, child, ...props}: any) => {\r\n\tconst hasError = meta.touched && meta.error\r\n\treturn (\r\n\t\t<div className={classes.formControl + ' ' + (hasError ? classes.error : '')}>\r\n\t\t\t<div>\r\n\t\t\t\t{props.children}\r\n\t\t\t</div>\r\n\t\t\t{hasError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n\tconst {input, meta, child, ...restProps} = props\r\n\treturn (<FormControl {...props}><textarea {...input} {...restProps}/></FormControl>)\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n\tconst {input, meta, child, ...restProps} = props\r\n\treturn (<FormControl {...props}><input {...input} {...restProps}/></FormControl>)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControlls_formControl__1I40l\",\"error\":\"FormsControlls_error__3gL0C\",\"formSummaryError\":\"FormsControlls_formSummaryError__2vRnd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__2qdcq\",\"btnPrev\":\"Pagination_btnPrev__3karp\",\"btnNext\":\"Pagination_btnNext__3Zx_b\",\"selectedPage\":\"Pagination_selectedPage__RyZik\"};","module.exports = __webpack_public_path__ + \"static/media/user.c4aac36a.png\";","export const requiredField = (value: string) => {\r\n\tif (value) {\r\n\t\treturn undefined\r\n\t} else {\r\n\t\treturn 'Field is required'\r\n\t}\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n\tif (value.length > maxLength) {\r\n\t\treturn `Max length is ${maxLength} symbols`\r\n\t} else {\r\n\t\treturn undefined\r\n\t}\r\n}","import {ActionsTypes, AddPostActionType, ProfileType} from \"./store\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nexport type SetUserProfileType = {\r\n\ttype: typeof SET_USER_PROFILE\r\n\tprofile: ProfileType\r\n}\r\n\r\nconst initialState = {\r\n\tpostData: [\r\n\t\t{id: 1, name: 'Denis', text: 'Hi everyone! Today I\\'ve had a good day!!!', time: '1 minute ago'},\r\n\t],\r\n\tprofile: null,\r\n\tstatus: ''\r\n};\r\n\r\nexport const profileReducer = (state: any = initialState, action: ActionsTypes) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST: {\r\n\t\t\tlet stateCopy = {...state}\r\n\t\t\tif (action.inputValue) {\r\n\t\t\t\tstateCopy.postData = [...state.postData, {id: 2, name: 'Denis', text: action.inputValue, time: '2 minutes ago'}]\r\n\t\t\t}\r\n\t\t\treturn stateCopy;\r\n\t\t}\r\n\t\tcase SET_USER_PROFILE: {\r\n\t\t\tdebugger\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: action.profile\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_STATUS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SAVE_PHOTO_SUCCESS: {\r\n\t\t\treturn {...state, profile: {...state.profile, photos: action.photos}}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n//actions\r\n\r\nexport const addPostActionCreator = (inputValue: string): AddPostActionType => {\r\n\treturn {\r\n\t\ttype: ADD_POST,\r\n\t\tinputValue: inputValue\r\n\t}\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileType => {\r\n\treturn {\r\n\t\ttype: SET_USER_PROFILE,\r\n\t\tprofile\r\n\t}\r\n}\r\nexport const savePhotoSuccess = (photos: any): any => {\r\n\treturn {\r\n\t\ttype: SAVE_PHOTO_SUCCESS,\r\n\t\tphotos\r\n\t}\r\n}\r\n\r\n//thunks\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: Dispatch) => {\r\n\tlet response = await usersAPI.getProfile(userId)\r\n\tdispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: Dispatch) => {\r\n\tlet response = await profileAPI.getStatus(userId)\r\n\tdispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch) => {\r\n\tlet response = await profileAPI.updateStatus(status)\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(setStatus(status))\r\n\t}\r\n}\r\nexport const savePhoto = (file: any) => async (dispatch: Dispatch) => {\r\n\tlet response = await profileAPI.savePhoto(file)\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(savePhotoSuccess(response.data.data.photos))\r\n\t}\r\n}\r\n\r\nexport const saveProfile = (profile: any) => async (dispatch: any, getState: any) => {\r\n\tconst userId = getState().auth.userId\r\n\tlet response = await profileAPI.saveProfile(profile)\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(getUserProfile(userId))\r\n\t} else {\r\n\t\tdispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}))\r\n\t\treturn Promise.reject(response.data.messages[0])\r\n\t}\r\n}\r\n\r\nexport const setStatus = (status: string) => {\r\n\treturn {type: SET_STATUS, status}\r\n}"],"sourceRoot":""}