{"version":3,"sources":["../node_modules/redux-form/es/Form.js","components/Sidebar/Navbar/Profile/ProfileInfo/ProfileInfo.module.css","components/Sidebar/Navbar/Profile/NewPost/NewPost.module.css","common/Avatar/Avatar.module.css","components/Sidebar/Navbar/Profile/Posts/Posts.module.css","components/Sidebar/Navbar/Profile/Posts/Post/Post.module.css","common/Avatar/Avatar.tsx","components/Sidebar/Navbar/Profile/NewPost/NewPost.tsx","components/Sidebar/Navbar/Profile/NewPost/NewPostContainer.tsx","components/Sidebar/Navbar/Profile/Posts/Post/Post.tsx","components/Sidebar/Navbar/Profile/Posts/Posts.tsx","components/Sidebar/Navbar/Profile/Posts/PostsContainer.tsx","components/Sidebar/Navbar/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.tsx","components/Sidebar/Navbar/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","components/Sidebar/Navbar/Profile/ProfileInfo/ProfileInfo.tsx","components/Sidebar/Navbar/Profile/Profile.tsx","components/Sidebar/Navbar/Profile/ProfileContainer.tsx"],"names":["Form","_Component","props","_this","call","this","_reduxForm","Error","_inheritsLoose","_proto","prototype","UNSAFE_componentWillMount","registerInnerOnSubmit","onSubmit","render","_this$props","rest","_objectWithoutPropertiesLoose","React","createElement","Component","propTypes","PropTypes","func","isRequired","object","withReduxForm","module","exports","Avatar","className","classes","avatar","src","alt","maxLength10","maxLengthCreator","NewPostRedux","reduxForm","form","handleSubmit","Field","component","Input","name","placeholder","validate","requiredField","NewPost","newPost","input","formData","addPost","NewPostContainer","connect","state","dispatch","inputValue","addPostActionCreator","Post","post","userInfo","nameAndDate","date","time","text","Posts","memo","postElement","postData","map","p","key","id","postsWrapper","PostsContainer","profile","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileDataFormReduxForm","error","initialValues","styles","formSummaryError","type","Textarea","Object","keys","contacts","contact","ProfileInfo","Preloader","photos","large","userPhoto","mainPhoto","saveProfile","then","isOwner","goToEditMode","target","files","savePhoto","ProfileData","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","WithUrlDataContainerComponent","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/3.5795b22c.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withReduxForm } from './ReduxFormContext';\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    if (!props._reduxForm) {\n      throw new Error('Form must be inside a component decorated with reduxForm()');\n    }\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n    this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _reduxForm = _this$props._reduxForm,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"_reduxForm\"]);\n\n    return /*#__PURE__*/React.createElement(\"form\", rest);\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  _reduxForm: PropTypes.object\n};\nexport default withReduxForm(Form);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPhoto\":\"ProfileInfo_mainPhoto__e4Kzo\",\"contact\":\"ProfileInfo_contact__33Iux\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"NewPost_newPost__1q2Co\",\"input\":\"NewPost_input__2UK05\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__1IUmW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsWrapper\":\"Posts_postsWrapper__1zSif\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__399nF\",\"userInfo\":\"Post_userInfo__3N5Bi\",\"nameAndDate\":\"Post_nameAndDate__NousX\",\"text\":\"Post_text__3a6W4\"};","import React from \"react\";\r\nimport classes from \"./Avatar.module.css\";\r\nimport avatar from './avatar.jpg'\r\n\r\n\r\nconst Avatar = ()=>{\r\n\treturn(\r\n\t\t<div className={classes.avatar}>\r\n\t\t\t<img src={avatar} alt=\"\"/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Avatar;","import React from \"react\";\r\nimport classes from \"./NewPost.module.css\";\r\nimport Avatar from \"../../../../../common/Avatar/Avatar\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../../../utils/validators/validators\";\r\nimport {Input} from \"../../../../../common/FormsControlls/FormsControlls\";\r\n\r\ntype PropsType = {\r\n\t// inputValue: string\r\n\taddPost: (inputValue: string) => void\r\n}\r\ntype NewPostType = {\r\n\tnewPost: string\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst NewPost = (props: PropsType) => {\r\n\r\n\tconst addNewPost = (formData: NewPostType) => {\r\n\t\tprops.addPost(formData.newPost)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.newPost}>\r\n\t\t\t<Avatar/>\r\n\t\t\t<div className={classes.input}>\r\n\t\t\t\t<NewPostRedux onSubmit={addNewPost}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst newPostForm: React.FC<InjectedFormProps<NewPostType>> = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<Field component={Input} name={'newPost'} placeholder={'Say something'}\r\n\t\t\t\t\t\t validate={[requiredField, maxLength10]}/>\r\n\t\t\t<button>SHARE</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst NewPostRedux = reduxForm<NewPostType>({form: 'profileAddNewPostForm'})(newPostForm)\r\n\r\nexport default NewPost;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../../../redux/profileReducer\";\r\nimport NewPost from \"./NewPost\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../../../../redux/store\";\r\n\r\n\r\n\r\n\r\nlet mapStateProps = (state: StateType) => {\r\n\treturn {\r\n\t\t// inputValue: state.profile.inputValue,\r\n\t}\r\n}\r\n\r\nlet mapDispatchProps = (dispatch: any) => {\r\n\treturn {\r\n\t\taddPost: (inputValue: string) => {\r\n\t\t\tdispatch(addPostActionCreator(inputValue))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst NewPostContainer = connect( mapStateProps,mapDispatchProps)(NewPost)\r\nexport default NewPostContainer;","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\nimport Avatar from \"../../../../../../common/Avatar/Avatar\";\r\n\r\ntype PropsType = {\r\n\tname: string\r\n\ttime: string\r\n\ttext: string\r\n}\r\n\r\nconst Post = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.post}>\r\n\t\t\t<div className={classes.userInfo}>\r\n\t\t\t\t<Avatar/>\r\n\t\t\t\t<div className={classes.nameAndDate}>\r\n\t\t\t\t\t<div className={classes.name}>\r\n\t\t\t\t\t\t{props.name}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.date}>\r\n\t\t\t\t\t\t{props.time}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.text}>\r\n\t\t\t\t{props.text}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from \"./Posts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {PostDataType} from \"../../../../../redux/store\";\r\n\r\n\r\ntype PropsType = {\r\n\tpostData: Array<PostDataType>\r\n}\r\n\r\nconst Posts = React.memo((props: PropsType) => {\r\n\r\n\tlet postElement = props.postData.map(p => <Post key={p.id} name={p.name} time={p.time} text={p.text}/>)\r\n\r\n\treturn (\r\n\t\t<div className={classes.postsWrapper}>\r\n\t\t\t{postElement}\r\n\t\t</div>)\r\n})\r\n\r\nexport default Posts;","import React from \"react\";\r\nimport {StateType} from \"../../../../../redux/store\";\r\nimport {connect} from \"react-redux\";\r\nimport Posts from \"./Posts\";\r\n\r\n\r\n// const PostsContainer = () => {\r\n// \treturn (\r\n// \t\t<StoreContext.Consumer>\r\n// \t\t\t{(store) => {\r\n// \t\t\t\tlet state = store.getState();\r\n// \t\t\t\tlet postElement = state.profile.postData.map(p => <Post name={p.name} time={p.time} text={p.text}/>)\r\n// \t\t\t\treturn (\r\n// \t\t\t\t\t<div className={classes.postsWrapper}>\r\n// \t\t\t\t\t\t{postElement}\r\n// \t\t\t\t\t</div>)\r\n// \t\t\t}\r\n// \t\t\t}\r\n// \t\t</StoreContext.Consumer>\r\n// \t)\r\n// }\r\n\r\nlet mapStateProps = (state: StateType) => {\r\n\treturn {\r\n\t\tpostData: state.profile.postData\r\n\t}\r\n}\r\n\r\nconst PostsContainer = connect(mapStateProps)(Posts)\r\n\r\nexport default PostsContainer;","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype PropsType = {\r\n\tstatus: any\r\n\tupdateStatus: any\r\n}\r\n\r\nexport const ProfileStatusWithHooks = (props: PropsType) => {\r\n\r\n\tconst [editMode, setEditMode] = useState(false)\r\n\tconst [status, setStatus] = useState(props.status)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status)\r\n\t}, [props.status])\r\n\r\n\tconst activateMode = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false)\r\n\t\tprops.updateStatus(status)\r\n\t}\r\n\r\n\tconst onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetStatus(e.currentTarget.value)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode &&\r\n      <div>\r\n        <b>Status</b>: <span onDoubleClick={activateMode}>{props.status || '----'}</span>\r\n      </div>\r\n\t\t\t}\r\n\t\t\t{editMode &&\r\n      <div>\r\n        <input autoFocus onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n      </div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from \"../ProfileInfo.module.css\";\r\nimport {Field, Form, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../../../../../common/FormsControlls/FormsControlls\";\r\nimport {DataProfileUserIdType} from \"../../ProfileContainer\";\r\nimport styles from '../../../../../../common/FormsControlls/FormsControlls.module.css';\r\n\r\nexport type ProfileFormDataType = {\r\n\tprofile: DataProfileUserIdType\r\n\tfullName: string\r\n\tlookingForAJob: boolean\r\n\tlookingForAJobDescription: string\r\n\taboutMe: string\r\n}\r\n\r\n\r\nconst ProfileDataForm: React.FC<InjectedFormProps<any>> = ({handleSubmit, error, initialValues}) => {\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Save</button>\r\n\t\t\t</div>\r\n\t\t\t{error && <div className={styles.formSummaryError}>\r\n\t\t\t\t{error}\r\n      </div>\r\n\t\t\t}\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<b>Full name</b>: <Field type=\"text\" placeholder={'Full name'} name={'fullName'} component={Input}/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<b>Looking for a job</b>: <Field type=\"checkbox\" name={'lookingForAJob'} component={Input}/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>My professional skills</b>: <Field type=\"text\" placeholder={'My professional skills'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={'lookingForAJobDescription'} component={Textarea}/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>About me</b>: <Field type=\"text\" placeholder={'About me'} name={'aboutMe'} component={Textarea}/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>Contacts</b>: {Object.keys(initialValues.contacts).map((key: string) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={key} className={classes.contact}>\r\n\t\t\t\t\t\t<b>{key}: <Field type=\"text\" placeholder={key} name={'contacts.' + key} component={Input}/></b>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</Form>\r\n\t)\r\n}\r\n\r\n\r\nconst ProfileDataFormReduxForm = reduxForm<any>({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, {useState} from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../../../common/preloader/Preloader\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../../../assets/images/user.png\";\r\nimport ProfileDataForm, {ProfileFormDataType} from \"./ProfileDataForm/ProfileDataForm\";\r\n\r\ntype PropsType = {\r\n\tprofile: any\r\n\tstatus: any\r\n\tupdateStatus: any\r\n\tisOwner: boolean\r\n\tsavePhoto: (photo: any) => void\r\n\tsaveProfile: any\r\n}\r\n\r\nexport const ProfileInfo = (props: PropsType) => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false)\r\n\r\n\tif (!props.profile) {\r\n\t\treturn <Preloader/>\r\n\t}\r\n\r\n\tconst onMainPhotoSelected = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (e.target.files) {\r\n\t\t\tprops.savePhoto(e.target.files[0]);\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmit = (formData: ProfileFormDataType) => {\r\n\t\tprops.saveProfile(formData)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tsetEditMode(false)\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc=\"https://www.google.com/imgres?imgurl=https%3A%2F%2Fp7.hiclipart.com%2Fpreview%2F703%2F593%2F258%2Fpac-man-collection-3d-computer-graphics-clip-art-packman.jpg&imgrefurl=https%3A%2F%2Fwww.hiclipart.com%2Ffree-transparent-background-png-clipart-xdjca&tbnid=aZtdgwW0aIpYJM&vet=12ahUKEwjysqP3wrbrAhXItqQKHU70ATwQMygJegUIARCuAQ..i&docid=CpQPntaovCNugM&w=800&h=1186&q=packman&ved=2ahUKEwjysqP3wrbrAhXItqQKHU70ATwQMygJegUIARCuAQ\"\r\n\t\t\t\t\talt=\"\"/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<img src={props.profile.photos.large || userPhoto} className={classes.mainPhoto} alt=\"\"/>\r\n\t\t\t\t{\r\n\t\t\t\t\teditMode ?\r\n\t\t\t\t\t\t<ProfileDataForm onSubmit={onSubmit}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t initialValues={props.profile}/>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<ProfileData profile={props.profile} isOwner={props.isOwner} goToEditMode={() => setEditMode(true)}/>\r\n\t\t\t\t}\r\n\t\t\t\t{props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n\t\t\t\t<ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\ntype ContactsValue = {\r\n\tcontactTitle: string\r\n\tcontactValue: string\r\n}\r\n\r\n\r\ntype ProfileDataType = {\r\n\tprofile: any,\r\n\tisOwner: boolean,\r\n\tgoToEditMode: () => void\r\n}\r\n\r\n\r\nconst ProfileData = (props: ProfileDataType) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tprops.isOwner &&\r\n        <div>\r\n          <button onClick={props.goToEditMode}>edit</button>\r\n        </div>\r\n\t\t\t}\r\n\t\t\t<div>\r\n\t\t\t\t<b>Full name</b>: {props.profile.fullName}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>Looking for a job</b>: {props.profile.lookingForAJob ? 'Yes' : 'no'}\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tprops.profile.lookingForAJob &&\r\n        <div>\r\n          <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\r\n        </div>\r\n\t\t\t}\r\n\t\t\t<div>\r\n\t\t\t\t<b>About me</b>: {props.profile.aboutMe}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>Contacts</b>: {Object.keys(props.profile.contacts).map((key: string) => {\r\n\t\t\t\treturn <Contact key={key}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}: ContactsValue) => {\r\n\treturn <div className={classes.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}","import React from \"react\";\r\nimport classes from \"./Profile.module.css\";\r\nimport NewPostContainer from \"./NewPost/NewPostContainer\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {DataProfileUserIdType} from \"./ProfileContainer\";\r\n\r\ntype PropsType = {\r\n\tprofile: DataProfileUserIdType\r\n\tstatus: any\r\n\tupdateStatus: any\r\n\tisOwner: boolean\r\n\tsavePhoto: any\r\n\tsaveProfile: any\r\n}\r\n\r\nconst Profile = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.profile}>\r\n\t\t\t<NewPostContainer/>\r\n\t\t\t<ProfileInfo profile={props.profile}\r\n\t\t\t\t\t\t\t\t\t status={props.status}\r\n\t\t\t\t\t\t\t\t\t updateStatus={props.updateStatus}\r\n\t\t\t\t\t\t\t\t\t isOwner={props.isOwner}\r\n\t\t\t\t\t\t\t\t\t savePhoto={props.savePhoto}\r\n\t\t\t\t\t\t\t\t\t saveProfile={props.saveProfile}/>\r\n\t\t\t<PostsContainer/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nexport type DataProfileUserIdType = {\r\n\taboutMe: string\r\n\tcontacts: ContactsType\r\n\t\"lookingForAJob\": true,\r\n\t\"lookingForAJobDescription\": string\r\n\t\"fullName\": string\r\n\t\"userId\": number\r\n\tphotos: PhotosType\r\n}\r\nexport type ContactsType = {\r\n\t\"facebook\": string,\r\n\t\"website\": string,\r\n\t\"vk\": string,\r\n\t\"twitter\": string,\r\n\t\"instagram\": string,\r\n\t\"youtube\": string,\r\n\t\"github\": string,\r\n\t\"mainLink\": string\r\n}\r\ntype PhotosType = {\r\n\tsmall: string\r\n\tlarge: string\r\n}\r\n\r\ntype ReactComponentType = {\r\n\tDataProfileUserIdType: DataProfileUserIdType\r\n}\r\n\r\nclass ProfileContainer extends React.Component<any, any> {\r\n\r\n\trefreshProfile() {\r\n\t\tlet userId = this.props.match.params.userId\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push('/login')\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getUserProfile(userId);\r\n\t\tthis.props.getStatus(userId)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshProfile()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any) {\r\n\t\tif(this.props.match.params.userId !== this.props.match.params.userId){\r\n\t\t\tthis.refreshProfile()\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <Profile profile={this.props.profile}\r\n\t\t\t\t\t\t\t\t\t\tstatus={this.props.status}\r\n\t\t\t\t\t\t\t\t\t\tupdateStatus={this.props.updateStatus}\r\n\t\t\t\t\t\t\t\t\t\tisOwner={!this.props.match.params.userId}\r\n\t\t\t\t\t\t\t\t\t\tsavePhoto={this.props.savePhoto}\r\n\t\t\t\t\t\t\t\t\t\tsaveProfile={this.props.saveProfile}/>\r\n\t}\r\n}\r\n\r\n\r\n// compose(\r\n// \tconnect(mapStateToProps, {getUserProfile}),\r\n// \twithRouter,\r\n// \tWithAuthRedirect\r\n// )(ProfileContainer)\r\n\r\n\r\nlet mapStateToProps = (state: any) => {\r\n\treturn {\r\n\t\tprofile: state.profile.profile,\r\n\t\tstatus: state.profile.status,\r\n\t\tauthorizedUserId: state.auth.userId,\r\n\t\tisAuth: state.auth.isAuth\r\n\t}\r\n}\r\n\r\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile})(WithUrlDataContainerComponent);"],"sourceRoot":""}